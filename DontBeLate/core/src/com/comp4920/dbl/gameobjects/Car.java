package com.comp4920.dbl.gameobjects;

import java.util.Random;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input.Keys;
import com.badlogic.gdx.math.Rectangle;
import com.badlogic.gdx.math.Vector2;
import com.comp4920.dbl.helpers.InputHandler;

public class Car implements Obstacle{

	protected Vector2 position;
	protected Vector2 velocity;
	protected Vector2 acceleration;
	
	protected Rectangle boundingRectangle;
	
	protected static final int CAR_WIDTH = 40;
	protected static final int CAR_HEIGHT = 80;	
	
	protected static boolean randomStartSpeed = true;
	private int maxSpeed = 200;
	private int minSpeed = 75;
	int defaultSpeed = 100;	//used if randomStartSpeed = false
	
	// does not take an x or y coord
	// x is generated by getRandomX
	// y is the same every time
	public Car() {
		int x = getStartX();
		int y = -CAR_HEIGHT;
		this.position = new Vector2(x, y);
		velocity = new Vector2(0, 20);
        acceleration = new Vector2(0, 100);
        velocity.y = genStartSpeed();
        boundingRectangle = new Rectangle();
	}
	
	public void update(float delta) {
		position.y += delta*velocity.y;
		boundingRectangle.set(position.x, position.y, CAR_WIDTH, CAR_HEIGHT);	//TODO: check these numbers
    }
	
	
	// returns a random starting x-coord
	//TODO: 'assign' columns to cars so they never overlap - maybe 'lanes'?
	public int getStartX() {
		int min = CAR_WIDTH/2;
		int max = Gdx.graphics.getWidth()/2 - CAR_WIDTH/2;
		Random rand = new Random();
		int randomX = rand.nextInt((max - min) + 1) + min;
		return randomX;
	}
	
	public int genStartSpeed() {
		int speed = defaultSpeed;
		if (randomStartSpeed) {
			Random rand = new Random();
			speed = rand.nextInt((maxSpeed - minSpeed) + 1) + minSpeed;
		}
		return speed;
	}
	
	// Returns true if the coords of the car are offscreen.
	public boolean offScreen() {
		int screenHeight = Gdx.graphics.getHeight();
		return (this.getY()-this.CAR_HEIGHT/2 > screenHeight/2);
	}
	
	
	public void stop() {
		velocity.y = 0;
	}

		
    public float getX() {
        return position.x;
    }

    public float getY() {
        return position.y;
    }

    public float getWidth() {
        return CAR_WIDTH;
    }

    public float getHeight() {
        return CAR_HEIGHT;
    }

    public Rectangle getHitBox() {
    	return boundingRectangle;
    }

}
